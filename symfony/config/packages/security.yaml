# Security should be configured for website in `security_website.yaml` and for admin in `security_admin.yaml`
security:
  enable_authenticator_manager: true
  access_decision_manager:
    strategy: unanimous
    allow_if_all_abstain: true

  encoders:
    Sulu\Bundle\SecurityBundle\Entity\User: bcrypt
    App\Entity\User: bcrypt

  providers:
    # Admin
    sulu:
      id: sulu_security.user_provider

  access_control:
    # Admin
    - { path: ^/admin/reset, roles: PUBLIC_ACCESS }
    - { path: ^/admin/security/reset, roles: PUBLIC_ACCESS }
    - { path: ^/admin/login$, roles: PUBLIC_ACCESS }
    - { path: ^/admin/_wdt, roles: PUBLIC_ACCESS }
    - { path: ^/admin/translations, roles: PUBLIC_ACCESS }
    - { path: ^/admin$, roles: PUBLIC_ACCESS }
    - { path: ^/admin/$, roles: PUBLIC_ACCESS }
    - { path: ^/admin, roles: ROLE_USER }

    # Website
    - { path: ^/api/auth/*, roles: PUBLIC_ACCESS }
    - { path: ^/api/docs, roles: PUBLIC_ACCESS }
    - { path: ^/user/*, roles: PUBLIC_ACCESS }

  firewalls:
    # Development
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    # Admin
    admin:
      pattern: ^/admin(\/|$)
      provider: sulu
      entry_point: sulu_security.authentication_entry_point
      json_login:
        check_path: sulu_admin.login_check
        success_handler: sulu_security.authentication_handler
        failure_handler: sulu_security.authentication_handler
      logout:
        path: sulu_admin.logout
        success_handler: sulu_security.logout_success_handler

    # Website
    doc:
      pattern: ^/api/docs
      stateless: true

    refresh:
      pattern:  ^/api/auth/refresh
      stateless: true

    register:
      pattern:  ^/api/auth/register
      stateless: true

    password_reset:
      pattern: ^/api/auth/password-reset
      stateless: true

    login:
      pattern: ^/api/auth/login
      stateless: true
      json_login:
        check_path: /api/auth/login
        username_path: email
        password_path: password
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    api:
      pattern: ^/api
      stateless: true
      jwt: ~

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

    main:
      lazy: true

sulu_security:
  checker:
    enabled: true

sulu_core:
  locales:
    en: English
    nl: Nederlands
  translations:
    - en
    - nl
# The name of this app. Must be unique within a project.
name: app

# Any dependencies
#dependencies:
#  nodejs:
#    yarn: "*"

# The type of the application to build.
type: php:8.0
build:
  # "none" means we're running composer manually, see build hook
  flavor: "none"

# Define timezone for correct cron handling.
timezone: 'Europe/Brussels'

# The relationships of the application with services or other applications.
relationships:
  database: "mysqldb:mysql"
  #  rabbitmqqueue: "rabbitmq:rabbitmq"
  rediscache: "cacheredis:redis"
  essearch: "searchelastic:elasticsearch"

# The size of the persistent disk of the application (in MB).
disk: 2048

variables:
  # Setting php.ini config
  php:
    memory_limit: 512M
    # The default OPcache configuration is not suited for Symfony applications
    opcache.memory_consumption: 256
    opcache.max_accelerated_files: 20000
    # Applications that open many PHP files, such as Symfony projects, should use at least these values
    realpath_cache_size: 4096K
    realpath_cache_ttl: 600
  env:
    # We disable Symfony Proxy (CacheKernel), as we rather use Varnish
    APP_HTTP_CACHE: 0
    # Warning: Only for Varnish on Platform.sh to workaround missing IP. Disable if you use Fastly or Symfony Proxy where this would be a security issue!
    TRUSTED_PROXIES: "REMOTE_ADDR"
    # Tell Symfony to always install in production-mode.
    APP_ENV: 'prod'
    APP_DEBUG: 0

# The configuration of app when it is exposed to the web.
web:
  locations:
    "/":
      # The public directory of the app, relative to its root.
      root: "symfony/public"
      # The front-controller script to send non-static requests to.
      passthru: "/index.php"
      # The number of seconds whitelisted (static) content should be cache
      expires: 600
      rules:
        # Disable .php(3) and other executable extensions in the var directory
        '^/var/.*(?i)\.(php3?|phar|phtml|sh|exe|pl|bin)$':
          allow: false

# The mounts that will be performed when the package is deployed.
mounts:
  "/symfony/var/cache":
    source: local
    source_path: "cache"
  "/symfony/var/log":
    source: local
    source_path: "log"
  "/symfony/var/sessions":
    source: local
    source_path: "sessions"
  "/symfony/var/uploads":
    source: local
    source_path: "uploads"
  "/symfony/public/uploads":
    source: local
    source_path: "public-uploads"
  "/symfony/public/bundles":
    source: local
    source_path: "bundle-assets"

# The hooks that will be performed when the package is deployed.
hooks:
  # Build hook, done before connected to services, disk is still writable here.
  build: |
    set -e
    cd symfony
    composer install --no-dev --prefer-dist --no-progress --no-interaction --optimize-autoloader

  # Deploy hook, access to services, only mounts are writable at this point
  # Note: Http traffic is paused while this is running, so for prod code this should finish as fast as possible.
  deploy: |
    set -e
    cd symfony
    rm -Rf var/cache/$APP_ENV/*.*
    bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration
    bin/console assets:install --symlink --relative public
    bin/console cache:clear
    bin/console fos:httpcache:clear
  # When using Varnish/Fastly, HttpCache is not cleared when clearing Symfony Cache folder above, you need to clear
  # cache yourself. Ideally you should only clear specific tags.

  # Post deploy hook, like deploy but after being deployed and live.
  # Tip: As this is running while web is running, and it's async, avoid doing anything like cache clearing that affects web requests here.
  #post_deploy: |
  #    set -e


# Workers
# see https://docs.platform.sh/configuration/app/workers.html
#workers:
#  queue:
#    commands:
#      start: |
#        php bin/console messenger:consume async --time-limit=3600
#    relationships:
#      database: 'mysqldb:mysql'

# Scheduled cron jobs.
# see https://docs.platform.sh/configuration/app/cron.html#cron-jobs
#crons:
#  example:
#    spec: "* * * * *"
#    cmd: "bin/console run:nothing"


# Extensions
runtime:
  extensions:
    - sodium
    - pdo
    - pdo_mysql
    - opcache
    - intl
    - gd
    - bcmath
    - igbinary
    - redis